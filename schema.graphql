type Block @entity {

  id: ID! #BlockHeight

  hash: String! @index

  timestamp: Date!

  events: [Event] @derivedFrom(field: "block")

  extrinsics: [Extrinsic]! @derivedFrom(field: "block")

}

type Event @entity {

  id: ID! #BlockHeight + EventId

  module: String! @index

  event: String!

  block: Block!

  extrinsic: Extrinsic

  timestamp: Date!

}

type Extrinsic @entity {

  id: ID!

  module: String! @index

  call: String!

  block: Block

  success: Boolean!

  isSigned: Boolean!

  nonce: Int!

  signature: String!

  parameters: JSON!

  sender: String!

  fee: BigInt!

  tip: BigInt!

  lifeTime: [BigInt]

  version: Int!

  signedExtension: JSON

  timestamp: Date!

}

type Account @entity {

  id: ID! #address

  pubkey: String! @index

  identity: Identity

  balances: [Balance]!

  nonce: Int

}

type Balance @entity {

  id: ID! #account_id[-asset_id]

  asset: Asset

  reservedAmount: BigInt!

  transferableAmount: BigInt!

  locked: JSON

}

type Asset @entity {
  id: ID!

  symbol: String!

  decimal: Int!

  totalIssuance: BigInt!
}

#TODO sub identity
type Identity @jsonField {
  display: String
  legal: String
  web: String
  riot: String
  email: String
  image: String
  twitter: String
}

type Transfer @entity {

  id: ID! #BLOCK+EVENT_ID

  amount: BigInt

  asset: Asset

  to: Account!

  from: Account!

  event: Event!
}

type Era @entity{

  id: ID! #EraIndex

  block: Block!
}

type Epoch @entity{

  id: ID! #Epoch_id

  block: Block!
}

type Session @entity{

  id: ID! #session_id

  block: Block!
}
